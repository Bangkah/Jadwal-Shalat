version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: prayer_times_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: prayer_times
      POSTGRES_USER: prayer_user
      POSTGRES_PASSWORD: prayer_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "5432:5432"
    networks:
      - prayer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prayer_user -d prayer_times"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prayer_times_api
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://prayer_user:prayer_password@db:5432/prayer_times?sslmode=disable"
      PORT: 8080
      DEBUG: "false"
      TZ: "Asia/Jakarta"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - prayer_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (for development)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: prayer_times_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: "http://localhost:8080"
      VITE_SUPABASE_URL: "${VITE_SUPABASE_URL:-}"
      VITE_SUPABASE_ANON_KEY: "${VITE_SUPABASE_ANON_KEY:-}"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - prayer_network
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: prayer_times_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - prayer_network
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: prayer_times_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - prayer_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  prayer_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16